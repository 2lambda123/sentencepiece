name: Build Wheels

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build_wheels:
    strategy:
      matrix:
        os: [macOS-10.15]
    runs-on: ${{ matrix.os }}
    name: Build wheels on ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: "3.x"

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: arm64
          
      - name: Build for Windows
        if: runner.os == 'Windows'
        run: |
          cmake -A Win32 -B ${{github.workspace}}/build_win32 -DSPM_ENABLE_SHARED=OFF -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/build/root_win32
          cmake --build ${{github.workspace}}/build_win32 --config Release --target install
          cmake -A x64   -B ${{github.workspace}}/build_amd64 -DSPM_ENABLE_SHARED=OFF -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/build/root_amd64
          cmake --build ${{github.workspace}}/build_amd64 --config Release --target install

      - name: Install cibuildwheel
        working-directory: ${{github.workspace}}/python
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
          python -m pip install cibuildwheel==2.6.0

      - name: Build wheels
        working-directory: ${{github.workspace}}/python
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_ARCHS_LINUX: auto aarch64
          CIBW_ARCHS_MACOS: x86_64 universal2 arm64
          CIBW_SKIP: pp*
